{
	"info": {
		"_postman_id": "cc96d698-2af1-49f4-89c5-ab16cb7a2cc8",
		"name": "Library Management System",
		"description": "Postman collection for testing both User and Book services.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39164790"
	},
	"item": [
		{
			"name": "Register User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response contains user id\", function () {",
							"    pm.expect(jsonData).to.have.property('id');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"password\": \"password\",\n  \"role\": \"member\"\n}"
				},
				"url": {
					"raw": "{{baseUrlUser}}/register",
					"host": [
						"{{baseUrlUser}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response contains token\", function () {",
							"    pm.expect(jsonData).to.have.property('token');",
							"});",
							"",
							"// Save token to environment variable",
							"pm.environment.set(\"jwtToken\", jsonData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"john@example.com\",\n  \"password\": \"password\"\n}"
				},
				"url": {
					"raw": "{{baseUrlUser}}/login",
					"host": [
						"{{baseUrlUser}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Profile contains user info\", function () {",
							"    pm.expect(jsonData).to.have.property('id');",
							"    pm.expect(jsonData).to.have.property('name');",
							"    pm.expect(jsonData).to.have.property('email');",
							"    pm.expect(jsonData).to.have.property('role');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}"
					}
				],
				"url": {
					"raw": "{{baseUrlUser}}/api/profile",
					"host": [
						"{{baseUrlUser}}"
					],
					"path": [
						"api",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrlBook}}/books",
					"host": [
						"{{baseUrlBook}}"
					],
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 201\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response contains book id\", function () {",
							"    pm.expect(jsonData).to.have.property('id');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Go Programming\",\n  \"author\": \"Jane Smith\",\n  \"description\": \"Introduction to Go\",\n  \"status\": \"available\"\n}"
				},
				"url": {
					"raw": "{{baseUrlBook}}/books",
					"host": [
						"{{baseUrlBook}}"
					],
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Loan Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response contains loan record id\", function () {",
							"    pm.expect(jsonData).to.have.property('id');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"due_date\": \"2025-04-01\"\n}"
				},
				"url": {
					"raw": "{{baseUrlBook}}/books/1/loan",
					"host": [
						"{{baseUrlBook}}"
					],
					"path": [
						"books",
						"1",
						"loan"
					]
				}
			},
			"response": []
		},
		{
			"name": "Return Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response indicates book is returned\", function () {",
							"    pm.expect(jsonData).to.have.property('returned_at');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwtToken}}"
					}
				],
				"url": {
					"raw": "{{baseUrlBook}}/books/1/return",
					"host": [
						"{{baseUrlBook}}"
					],
					"path": [
						"books",
						"1",
						"return"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrlUser",
			"value": "http://localhost:8081"
		},
		{
			"key": "baseUrlBook",
			"value": "http://localhost:8082"
		},
		{
			"key": "jwtToken",
			"value": ""
		}
	]
}